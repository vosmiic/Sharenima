@using Sharenima.Shared.Queue
@inherits Sharenima.Client.ComponentCode.Player
@if (Video != null) {
    switch (Video.VideoType) {
        case VideoType.YouTube:
            <div id="youtubeContainer" class="playerContainer">
                <div id="player"></div>
            </div>
            break;
        case VideoType.FileUpload:
            <div id="fileUploadContainer" class="playerContainer">
                @if (Video.MediaType.StartsWith("video")) {
                    <div id="mediaPlayer">
                        <source src="@Video.Url" type="@Video.MediaType"/>
                    </div>
                } else if (Video.MediaType.StartsWith("audio")) {
                    <audio id="mediaPlayer" controls>
                        <source src="@Video.Url" type="@Video.MediaType"/>
                    </audio>
                }
            </div>
            break;
    }
} else if (StreamUrl != null) {
    <div id="streamContainer" class="playerContainer" style="height: unset">
        <nav class="navbar navbar-dark bg-light">
            <div class="mx-auto"></div>
            <div class="d-flex flex-row-reverse bd-highlight">
                <MatIconButton Icon="close" OnClick="CloseStreamClicked"></MatIconButton>
            </div>
        </nav>
        <div id="streamPlayer"></div>
    </div>
} else {
    <MatProgressCircle Indeterminate="true" Size="MatProgressCircleSize.Large"/>
}