@page "/Queue"
@inherits Sharenima.Client.ComponentCode.Queue

<MatTabGroup>
    <MatTab>
        <LabelContent>
            URL <MatIcon Icon="@MatIconNames.Insert_link"></MatIcon>
        </LabelContent>
        <ChildContent>
            <div class="d-flex">
                <MatTextField TValue="string" @bind-Value="VideoUrl" Label="Video URL" Style="width: 100%"/>
                <MatIconButton Icon="add_to_queue" OnClick="AddVideoToQueue"/>
            </div>
        </ChildContent>
    </MatTab>
    <MatTab>
        <LabelContent>
            Upload <MatIcon Icon="@MatIconNames.Attach_file"></MatIcon>
        </LabelContent>
        <ChildContent>
            <InputFile OnChange="@UploadVideoToQueueNew"></InputFile>
            <!--
            <MatFileUpload OnChange="UploadVideoToQueue" Label="Drag and drop a video here or click here to select a local file"></MatFileUpload>
            -->
        </ChildContent>
    </MatTab>
</MatTabGroup>
<div class="container">
    @if (QueueList?.Count == 0) {
        <MatProgressCircle Indeterminate="true" Size="MatProgressCircleSize.Large"/>
    } else {
        <div class="row row-cols-1">
            <Dropzone Items="QueueList" TItem="Sharenima.Shared.Queue" OnItemDrop="OnDrop" Accepts="(dragged, target) => dragged?.Order != 0 && target?.Order != 0">
                <div class="col" @key="@context.Id">
                    <MatCard>
                        <MatCardContent>
                            <MatCardMedia Wide="true" ImageUrl="@context.Thumbnail"/>
                            <MatBody1>@context.Name</MatBody1>
                        </MatCardContent>
                        <MatCardActions>
                            <MatButton OnClick="() => RemoveFromVideoQueue(context.Id)" Disabled="!Authenticated">Remove</MatButton>
                        </MatCardActions>
                    </MatCard>
                </div>
            </Dropzone>
        </div>
    }
</div>
